from const import *
import random
import telebot
from telebot import types
from telebot.apihelper import ApiTelegramException
from markups import *
from moderacia import *
from const import *
import time
import sqlite3

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
cursor.execute('''CREATE TABLE IF NOT EXISTS users
                  (user_id TEXT PRIMARY KEY)''')
conn.commit()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
def get_joined_users():
    cursor.execute("SELECT user_id FROM users")
    return {row[0] for row in cursor.fetchall()}

joinedUsers = get_joined_users()

@bot.message_handler(commands=['start'])
def start(message):
    if bot.get_chat_member(chat_id=my_channel_id, user_id=message.from_user.id).status != 'left':
        bot.send_message(message.chat.id, text_start, reply_markup=markup1)
    else:
        bot.send_message(message.chat.id, "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {} –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è".format(set_channel))
    
    user_id = str(message.chat.id)
    if user_id not in joinedUsers:
        try:
            cursor.execute("INSERT INTO users (user_id) VALUES (?)", (user_id,))
            conn.commit()
            joinedUsers.add(user_id)
        except sqlite3.IntegrityError:
            pass  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç

@bot.message_handler(commands=['phelp'])
def help(message):
    cursor.execute("SELECT user_id FROM users")
    users = cursor.fetchall()
    for user in users:
        try:
            bot.send_message(user[0], 'ura robit')
        except ApiTelegramException as e:
            if e.description == "Forbidden: bot was blocked by the user":
                print(f"User {user[0]} blocked the bot")

@bot.message_handler(commands=['help'])
def phelp(message):
    bot.send_message(chat_id=message.chat.id, text=f'–ü—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º/–•–æ—á–µ—à—å —Ç–∞–∫–æ–π –∂–µ? {Media}')

@bot.message_handler(commands=['send_uved'])
def mess(message):
    if bot.get_chat_member(chat_id=my_channel_id, user_id=message.from_user.id).status in ['creator', 'administrator']:
        cursor.execute("SELECT user_id FROM users")
        for user in cursor.fetchall():
            try:
                bot.send_message(user[0], message.text[message.text.find(' '):])
                with open('ronaldo_reklama.jpg', 'rb') as photo:
                    bot.send_photo(user[0], photo)
            except ApiTelegramException as e:
                if e.description == "Forbidden: bot was blocked by the user":
                    print(f"User {user[0]} blocked the bot")

@bot.message_handler(content_types=['text'])
def text(message):
    if message.text == '–£–î–ê–†–ò–¢–¨ü•Ö':
        def goal(message):
            if message.text in ['1', '2', '3', '4', '5']:
                if random.choice([0, 100]) not in list(range(22)):
                    with open('zabili.png', 'rb') as f1:
                        bot.send_photo(message.chat.id, f1)
                    bot.send_message(message.chat.id, '''–í—ã –∑–∞–±–∏–ª–∏ –≥–æ–ª! –í—ã –º–æ–ª–æ–¥–µ—Ü!''')
                    bot.register_next_step_handler(message, goal)
                else:
                    with open('goal_nezabit.png', 'rb') as f:
                        bot.send_photo(message.chat.id, f)
                    bot.send_message(message.chat.id, '''–ü—Ä–æ–º–∞—Ö! –í—ã –Ω–µ –∑–∞–±–∏–ª–∏ –≥–æ–ª! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!''')
                    bot.register_next_step_handler(message, goal)
            else:
                text(message)
        with open('penalty.png', 'rb') as f3:
            bot.send_photo(message.chat.id, f3)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞—Ä–∏—Ç—å! (–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É)', reply_markup=markup2)
        bot.register_next_step_handler(message, goal)
    elif message.text == '–î–æ–º–æ–πü•Ö':
        start(message)
    elif message.text == '–û—Ç–∫—Ä—ã—Ç—å –ü–∞–∫üòâ':
            global tm
            if float(time.time()) - float(tm) > 3600.0:
                number_hero = random.randint(0, 100)
                try:
                    with open(f'{draft[number_hero]}', 'rb') as g1:
                        bot.send_photo(message.chat.id, g1)
                    bot.send_message(message.chat.id, f'–í–∞–º –≤—ã–ø–∞–ª –∏–≥—Ä–æ–∫ ^^^^^^^')
                except:
                    with open('unlucky.png', 'rb') as l1:
                        bot.send_photo(message.chat.id, l1)
                    bot.send_message(message.chat.id, '–í–∞–º –Ω–µ –ø–æ–≤–µ–∑–ª–æ :(')
                tm = time.time()
            else:
                bot.send_message(message.chat.id, f'–î–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–∫–∞ –æ—Å—Ç–∞–ª–æ—Å—å -- {(tm + 3600.0 - time.time())//60} –º–∏–Ω—É—Ç')
    elif message.text == 'root' and bot.get_chat_member(chat_id=my_channel_id, user_id=message.from_user.id).status in ['creator', 'administrator']:
        tm = 0
    else:
        bot.send_message(message.chat.id, '–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª(')

if __name__ == '__main__':
    try:
        bot.polling(none_stop=True)
    finally:
        conn.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
